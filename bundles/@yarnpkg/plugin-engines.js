/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-engines",
factory: function (require) {
var plugin=(()=>{var R=Object.create,m=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var N=n=>m(n,"__esModule",{value:!0});var i=n=>{if(typeof require!="undefined")return require(n);throw new Error('Dynamic require of "'+n+'" is not supported')};var V=(n,e)=>{for(var r in e)m(n,r,{get:e[r],enumerable:!0})},T=(n,e,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of P(e))!b.call(n,t)&&t!=="default"&&m(n,t,{get:()=>e[t],enumerable:!(r=j(e,t))||r.enumerable});return n},s=n=>T(N(m(n!=null?R(Y(n)):{},"default",n&&n.__esModule&&"default"in n?{get:()=>n.default,enumerable:!0}:{value:n,enumerable:!0})),n);var $={};V($,{default:()=>M});var o=s(i("@yarnpkg/core")),c;(function(r){r.Yarn="Yarn",r.Console="Console"})(c||(c={}));var p=class{constructor(e){this.throwWrongEngineError=(e,r)=>{let t=this.formatErrorMessage(e,r);this.throwError(t)};this.throwError=e=>{switch(this.errorReporter){case c.Yarn:this.reportYarnError(e);break;case c.Console:default:this.reportConsoleError(e);break}};this.reportYarnError=e=>{throw new o.ReportError(o.MessageName.UNNAMED,e)};this.reportConsoleError=e=>{console.error(e),process.exit(1)};this.formatErrorMessage=(e,r)=>{let{configuration:t}=this.project,h=o.formatUtils.applyStyle(t,o.formatUtils.pretty(t,this.engine,"green"),2),g=o.formatUtils.pretty(t,e,"cyan"),x=o.formatUtils.pretty(t,r,"cyan"),w=`The current ${h} version ${g} does not satisfy the required version ${x}.`;return o.formatUtils.pretty(t,w,"red")};this.project=e.project,this.errorReporter=e.errorReporter}};var E=s(i("fs")),y=s(i("path")),f=s(i("semver")),k=s(i("@yarnpkg/fslib")),a=s(i("@yarnpkg/core"));var d=class extends p{constructor(){super(...arguments);this.resolveNvmRequiredVersion=()=>{let{configuration:e,cwd:r}=this.project,t=(0,E.readFileSync)((0,y.resolve)(k.npath.fromPortablePath(r),".nvmrc"),"utf-8").trim();if((0,f.validRange)(t))return t;let h=a.formatUtils.applyStyle(e,a.formatUtils.pretty(e,this.engine,"green"),2),g=a.formatUtils.pretty(e,".nvmrc","yellow");this.throwError(a.formatUtils.pretty(e,`Unable to verify the ${h} version. The ${g} file contains an invalid semver range.`,"red"))}}get engine(){return"Node"}verifyEngine(e){let r=e.node;r!=null&&(r===".nvmrc"&&(r=this.resolveNvmRequiredVersion()),(0,f.satisfies)(process.version,r)||this.throwWrongEngineError(process.version.replace(/^v/i,""),r.replace(/^v/i,"")))}};var u=s(i("semver")),l=s(i("@yarnpkg/core"));var v=class extends p{get engine(){return"Yarn"}verifyEngine(e){let r=e.yarn;r!=null&&((0,u.satisfies)(l.YarnVersion,r)||this.throwWrongEngineError(l.YarnVersion,r))}};var C=n=>e=>{let{engines:r={}}=e.getWorkspaceByCwd(e.cwd).manifest.raw,t={project:e,errorReporter:n};[new d(t),new v(t)].forEach(g=>g.verifyEngine(r))},q={hooks:{validateProject:C(c.Yarn),setupScriptEnvironment:C(c.Console)}},M=q;return $;})();
return plugin;
}
};
