/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-engines",
factory: function (require) {
var plugin=(()=>{var y=Object.create,c=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var j=r=>c(r,"__esModule",{value:!0});var g=r=>{if(typeof require!="undefined")return require(r);throw new Error('Dynamic require of "'+r+'" is not supported')};var Y=(r,e)=>{for(var n in e)c(r,n,{get:e[n],enumerable:!0})},P=(r,e,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of x(e))!R.call(r,o)&&o!=="default"&&c(r,o,{get:()=>e[o],enumerable:!(n=C(e,o))||n.enumerable});return r},p=r=>P(j(c(r!=null?y(w(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);var V={};Y(V,{default:()=>N});var t=p(g("@yarnpkg/core")),i;(function(n){n.Yarn="Yarn",n.Console="Console"})(i||(i={}));var s=class{constructor(e){this.throwWrongEngineError=(e,n)=>{let o=this.formatErrorMessage(e,n);switch(this.errorReporter){case i.Yarn:this.reportYarnError(o);break;case i.Console:default:this.reportConsoleError(o);break}};this.reportYarnError=e=>{throw new t.ReportError(t.MessageName.UNNAMED,e)};this.reportConsoleError=e=>{console.error(e),process.exit(1)};this.formatErrorMessage=(e,n)=>{let{configuration:o}=this.project,m=t.formatUtils.applyStyle(o,t.formatUtils.pretty(o,this.engine,"green"),2),a=t.formatUtils.pretty(o,e,"cyan"),u=t.formatUtils.pretty(o,n,"cyan"),v=`The current ${m} version ${a} does not satisfy the required version ${u}.`;return t.formatUtils.pretty(o,v,"red")};this.project=e.project,this.errorReporter=e.errorReporter}};var E=p(g("semver"));var h=class extends s{get engine(){return"Node"}verifyEngine(e){let n=e.node;n!=null&&((0,E.satisfies)(process.version,n)||this.throwWrongEngineError(process.version.replace(/^v/i,""),n.replace(/^v/i,"")))}};var k=p(g("semver")),d=p(g("@yarnpkg/core"));var f=class extends s{get engine(){return"Yarn"}verifyEngine(e){let n=e.yarn;n!=null&&((0,k.satisfies)(d.YarnVersion,n)||this.throwWrongEngineError(d.YarnVersion,n))}};var l=r=>e=>{let{engines:n={}}=e.getWorkspaceByCwd(e.cwd).manifest.raw,o={project:e,errorReporter:r};[new h(o),new f(o)].forEach(a=>a.verifyEngine(n))},b={hooks:{validateProject:l(i.Yarn),setupScriptEnvironment:l(i.Console)}},N=b;return V;})();
return plugin;
}
};
